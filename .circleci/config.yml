# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
      - image: circleci/cassandra:3.10
        environment:
          MAX_HEAP_SIZE: 2048m
          HEAP_NEWSIZE: 512m
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          key: dockerize-{{ arch }}-v0.6.1
      - run:
          name: install dockerize if not found in cache
          command: |
            if \[ -f /usr/local/bin/dockerize \]; then
              echo "dockerize found; skipping installation";
            else wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            fi
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - save_cache:
          key: dockerize-{{ arch }}-v0.6.1
          paths:
            - /usr/local/bin/dockerize
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: wait for cassandra
          command: dockerize -wait tcp://localhost:9042 -timeout 1m
      # run tests!
      - run: npm test



